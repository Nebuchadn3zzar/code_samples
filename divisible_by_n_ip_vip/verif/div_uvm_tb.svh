///////////////////////////////////////////////////////////////////////////////
// Author: Will Chen
//
// Description:
//    * Source file include list for streaming divisibility checker UVM
//      testbench
///////////////////////////////////////////////////////////////////////////////


// UVM library
import uvm_pkg::*;
`include "uvm_macros.svh"

// Single-line file generated by 'make vip', containing a `define that informs
// the testbench of which fixed integer divisor the DUT was generated for
`include "div_by_define.svh"

// Static testbench `defines
`include "div_tb_defines.svh"

// Testbench source files
`include "div_if.sv"           // Interface between divisibility checker module and testbench
`include "reg_if.sv"           // Interface between register bus and testbench
`include "tb.sv"               // Top module of UVM testbench
`include "reset_txn.sv"        // Sequence item classes for reset agent
`include "reset_sequencer.sv"  // Sequencer component of reset agent
`include "reset_driver.sv"     // Driver component of reset agent
`include "reset_monitor.sv"    // Monitor component of reset agent
`include "reset_cov.sv"        // Coverage model and collection component for resets
`include "reset_agent.sv"      // Agent component of reset agent
`include "div_packet.sv"       // Sequence item classes for divisibility checker module
`include "div_sequencer.sv"    // Sequencer component of divisibility checker agent
`include "div_driver.sv"       // Driver component of divisibility checker agent
`include "div_monitor.sv"      // Monitor component of divisibility checker agent
`include "div_cov.sv"          // Coverage model and collection component for divisibility checker
`include "div_agent.sv"        // Agent component of divisibility checker module
`include "div_ref_model.sv"    // Reference model of divisibility checker module
`include "div_scoreboard.sv"   // Scoreboard component of divisibility checker module
`include "reg_rw_item.sv"      // Sequence item class for register bus interface
`include "reg_bus_adapter.sv"  // Adapter between UVM register model and register bus
`include "reg_sequencer.sv"    // Sequencer component of register bus interface agent
`include "reg_driver.sv"       // Driver component of register bus interface agent
`include "reg_agent.sv"        // Agent component of register bus interface
`include "reg_model.sv"        // Register model of streaming divisibility checker design
`include "reg_predictors.sv"   // Predictors that update register mirrors upon observed transactions
`include "div_env.sv"          // Environment component of UVM testbench
`include "seq_lib.sv"          // Library of sequences executed by tests

// Test library
`include "test_lib.sv"

