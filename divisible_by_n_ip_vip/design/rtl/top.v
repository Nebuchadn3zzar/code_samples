///////////////////////////////////////////////////////////////////////////////
// Author: Will Chen
//
// Description:
//    * Top RTL module that instantiates the following modules:
//       * divisible_by_N: Takes a bitstream as input, and outputs whether the
//                         bitstream thus far is divisible by a fixed integer
//                         divisor N (generated by RTL generator script)
//       * div_counter:    Counts the number of times that a positive and valid
//                         'divisible' result was encountered; counter is
//                         exposed as a register (static)
///////////////////////////////////////////////////////////////////////////////


// Constants
`define REG_ADDR_SZ  8
`define REG_DATA_SZ 16

// Root RTL module
module top(
    input clk,
    input rst_n,

    // Inputs of divisibility checker module
    input in,
    input in_vld,

    // Outputs of divisibility checker module
    output out,
    output out_vld,

    // Register bus
    input                     reg_rd_en,
    input                     reg_wr_en,
    input  [`REG_ADDR_SZ-1:0] reg_addr,
    input  [`REG_DATA_SZ-1:0] reg_wr_data,
    output [`REG_DATA_SZ-1:0] reg_rd_data
);

    // Divisibility checker
    divisible_by_N divisible_by_N(
        .clk     (clk),
        .rst_n   (rst_n),
        .in      (in),
        .in_vld  (in_vld),
        .out     (out),
        .out_vld (out_vld)
    );

    // Counter
    div_counter div_counter(
        .clk         (clk),
        .rst_n       (rst_n),
        .divisible   (out),
        .result_vld  (out_vld),
        .reg_rd_en   (reg_rd_en),
        .reg_wr_en   (reg_wr_en),
        .reg_addr    (reg_addr),
        .reg_wr_data (reg_wr_data),
        .reg_rd_data (reg_rd_data)
    );
endmodule : top

